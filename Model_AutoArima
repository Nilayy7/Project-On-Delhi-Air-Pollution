library(padr)
library(dplyr)
library(tidyr)
library(readxl)
library(magrittr)
library(forecast)
library(imputeTS)
library(DMwR)

#Read Data
delhi_air <- read_excel("C:/Users/Chetan Yewale/Downloads/Delhi.xlsx")
str(delhi_air)

#Converting structure of PM25 Data Into Numeric
delhi_air$pm25 <- gsub('-',NA,delhi_air$pm25,fixed=TRUE)       #"-" converted into NA
delhi_air$pm25<- as.numeric(delhi_air$pm25)
str(delhi_air)
plot(delhi_air$pm25,type = "l")

##Counting NA Values
sum(is.na(delhi_air$pm25))

## Filling up Date n Time
delhi_fill<- pad(as.data.frame(delhi_air,interval = NULL, start_val = NULL, end_val =NULL))
View(delhi_fill)
sum(is.na(delhi_fill$pm25))
plotNA.distribution(delhi_fill$pm25)    ## showing missing values
str(delhi_fill)


##replacing missing values with 
#delhi_fill$intrpolation<- na_seasplit(delhi_fill$pm25,algorithm = "interpolation",find_frequency=TRUE)
delhi_fill$pm_ma<- na_seasplit(delhi_fill$pm25,algorithm = "ma",find_frequency = T)

View(delhi_fill)
str(delhi_fill)
delhi_fill<- delhi_fill[,-c(2)]

## Converted Into Time Series 
delhi_fill$pm_ma<- ts(delhi_fill$pm_ma,frequency =365*24,start = c(2018,1),end = c(2018,2617))
str(delhi_fill)

######  Testing For Data whether it is stationery Or Not
library(aTSA)
library(tseries)
stationary.test(delhi_fill$pm_ma, method = "pp") # pp test
stationary.test(delhi_fill$pm_ma,method = "adf")  #adf test
trend.test(delhi_fill$pm_ma)

## Visualization  ##
library(ggplot2)

### With TIME SERIES MOVING AVERAGE
ggplot(data = delhi_fill,aes(x= date,y= pm_ma)) + 
  geom_line(colour='red') +
  geom_line(colour="Blue",data = delhi_air,aes(x= date,y= pm25))+
  theme(panel.background = element_blank())+
  ylim(0,750)+
  ggtitle("MOVING AVERAGE Values")

View(delhi_fill)
str(delhi_fill)



library(forecast)


### splitting
train<- delhi_fill[1:2094,]
test<- delhi_fill[2095:2617,]
str(train)

train<- ts(train$pm_ma)
test<- ts(test$pm_ma)
library(dplyr)


##################### Model Building  ######################################

## AUTO-ARIMA ##

model_aa<- auto.arima(train,method = "ML")
accuracy(model_aa)                                    ####  Train RMSE = 50.33
pred_aa <- data.frame(forecast(model_aa,h = 523))
fcast_aa<- forecast(model_aa,h= 523)
plot(fcast_aa)
accuracy(as.vector(fcast_aa$mean),test)               #### Test RMSE = 91.16



##### Run Model On Whole Dataset
model_aa_wd<- auto.arima(delhi_fill$pm_ma,method = "ML")
accuracy(model_aa_wd)                                 #### Train RMSE = 52.78
